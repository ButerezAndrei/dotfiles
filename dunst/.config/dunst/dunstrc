# See dunst(5) for all configuration options

[global]
    monitor = 0

    follow = none

    origin = top-right

    notification_limit = 20

    progress_bar = true

    indicate_hidden = yes

    transparency = 0

    separator_height = 2

    sort = yes

    markup = full

    show_age_threshold = 60

    ellipsize = middle

    ignore_newline = no

    stack_duplicates = true

    hide_duplicate_count = false

    show_indicators = yes

    enable_recursive_icon_lookup = true

    icon_path = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/

    sticky_history = yes

    history_length = 20

    dmenu = /usr/bin/dmenu -p dunst:

    browser = /usr/bin/xdg-open

    always_run_script = true


    ignore_dbusclose = false

    force_xwayland = false

    force_xinerama = false

    mouse_left_click = close_current
    mouse_middle_click = do_action, close_current
    mouse_right_click = close_all

	 	width = 400
    offset = 5x5
    
    progress_bar_min_width = 380
    progress_bar_max_width = 380
    progress_bar_corner_radius = 2

    padding = 10
    horizontal_padding = 10
    frame_width = 1
    gap_size = 3
    font = "Monospace 14"

    icon_theme = "rose-pine-icons"
    enable_recursive_icon_lookup = true
    corner_radius = 2

    background = "#26233a"
    foreground = "#e0def4"

		
[experimental]
    # Calculate the dpi to use on a per-monitor basis.
    # If this setting is enabled the Xft.dpi value will be ignored and instead
    # dunst will attempt to calculate an appropriate dpi value for each monitor
    # using the resolution and physical size. This might be useful in setups
    # where there are multiple screens with very different dpi values.
    per_monitor_dpi = false


[urgency_low]
    background = "#26273d"
    highlight = "#31748f"
    frame_color = "#31748f"
    default_icon = "dialog-information"
    format = "<b><span foreground='#31748f'>%s</span></b>\n%b"

[urgency_normal]
    background = "#362e3c"
    highlight = "#f6c177"
    frame_color = "#f6c177"
    default_icon = "dialog-warning"
    format = "<b><span foreground='#f6c177'>%s</span></b>\n%b"

[urgency_critical]
    background = "#35263d"
    highlight = "#eb6f92"
    frame_color = "#eb6f92"
    default_icon = "dialog-error"
    format = "<b><span foreground='#eb6f92'>%s</span></b>\n%b"

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    set_category
#    timeout
#    urgency
#    icon_position
#    skip_display
#    history_ignore
#    action_name
#    word_wrap
#    ellipsize
#    alignment
#    hide_text
#    override_pause_level
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# You can also allow a notification to appear even when paused. Notification will appear whenever notification's override_pause_level >= dunst's paused level.
# This can be used to set partial pause modes, where more urgent notifications get through, but less urgent stay paused. To do that, you can override the following in the rules:
# override_pause_level = X

# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    skip_display = true

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#
# vim: ft=cfg
